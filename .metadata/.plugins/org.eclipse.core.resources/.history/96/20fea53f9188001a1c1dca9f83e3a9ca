package com.capgemini.springmvc.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.PersistenceUnit;
import javax.persistence.Query;

import org.springframework.stereotype.Repository;

import com.capgemini.springmvc.bean.EmployeePrimaryInfo;
@Repository
public class EmployeeDAOImplmentation implements EmployeeDAO {
@PersistenceUnit
private EntityManagerFactory factory;
	@Override
	public List<EmployeePrimaryInfo> getAllEMployeeInfo() {
		EntityManager manager = factory.createEntityManager();
		
		String jpql="Select e from EmployeePrimaryInfo e ";
		Query query = manager.createQuery(jpql);
		List<EmployeePrimaryInfo> employeeList=query.getResultList();
		manager.close();
		return employeeList;
	}

	@Override
	public EmployeePrimaryInfo authenticate(int empId, String password) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public EmployeePrimaryInfo getEmployeeDetails(int id) {
		EntityManager manager = factory.createEntityManager();
		EmployeePrimaryInfo employeeInfoBean = manager.find(EmployeePrimaryInfo.class, id);
		
		manager.close();
		return employeeInfoBean;
	}

	@Override
	public boolean createEmployeeInfo(EmployeePrimaryInfo info) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction=manager.getTransaction();
		boolean isAdded=false;
		try {
			transaction.begin();
			manager.persist(info);
			transaction.commit();
			isAdded=true;
			System.out.println("Added");
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			manager.close();
		}
		return isAdded;
	}

	@Override
	public boolean deleteEmployeeInfo(int id) {
		boolean isDeleted=false;
		EntityManager manager = factory.createEntityManager();
		EmployeePrimaryInfo employeeInfoBean = manager.find(EmployeePrimaryInfo.class, id);
		
		if(employeeInfoBean!=null) {
			EntityTransaction transaction=manager.getTransaction();
			transaction.begin();
			manager.remove(employeeInfoBean);
			transaction.commit();
			isDeleted=true;
		}
		manager.close();
		return isDeleted;
	}

	@Override
	public boolean updateEmployeeInfo(EmployeePrimaryInfo info) {
		boolean isUpdated=false;
		EntityManager manager = factory.createEntityManager();
		if(!isUpdated) {
			EntityTransaction transaction=manager.getTransaction();
			transaction.begin();
		String jpql = "update EmployeePrimaryInfo m set m.name=kusuma where m.id=1";
		Query query = manager.createQuery(jpql);
			query.executeUpdate();
			transaction.commit();
			isUpdated=true;
		}
		manager.close();
		return isUpdated;
	}

}
